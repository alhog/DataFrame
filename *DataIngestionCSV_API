import pandas as pd
import requests
from loguru import logger

class DataIngestionModule:
    def __init__(self, config):
        self.config = config

    def ingest_csv(self, file_path):
        logger.info(f"Ingesting CSV file: {file_path}")
        try:
            data = pd.read_csv(file_path)
            return data
        except Exception as e:
            logger.error(f"Error ingesting CSV file: {e}")
            raise

    def ingest_api(self, url, params=None, headers=None):
        logger.info(f"Ingesting data from API: {url}")
        try:
            response = requests.get(url, params=params, headers=headers)
            response.raise_for_status()
            data = pd.DataFrame(response.json())
            return data
        except Exception as e:
            logger.error(f"Error ingesting data from API: {e}")
            raise

    def update_data(self, data, url, params=None, headers=None):
        logger.info(f"Updating data from API: {url}")
        try:
            response = requests.get(url, params=params, headers=headers)
            response.raise_for_status()
            new_data = pd.DataFrame(response.json())
            updated_data = pd.concat([data, new_data]).drop_duplicates()
            return updated_data
        except Exception as e:
            logger.error(f"Error updating data from API: {e}")
            raise

# Example usage
config = {
    'database_uri': 'postgresql://user:password@host:port/database'
}

ingestion_module = DataIngestionModule(config)
csv_data = ingestion_module.ingest_csv('data.csv')
api_data = ingestion_module.ingest_api('https://api.example.com/data', headers={'Authorization': 'Bearer token'})
updated_data = ingestion_module.update_data(csv_data, 'https://api.example.com/update', headers={'Authorization': 'Bearer token'})
